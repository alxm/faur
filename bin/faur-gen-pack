#!/usr/bin/env python3

"""
    Copyright 2016 Alex Margarit <alex@alxm.org>
    This file is part of Faur, a C video game framework.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License version 3,
    as published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

import os
import time

from faur.tool.tool import Tool

"""
category/f_sample.p.h
    #include "../general/f_system_includes.h"
    #include "../foo/f_bar.p.h"
    <public typedefs>
    #include "../foo/f_bar.p.h"
    <public typedef implementations>
    <public api prototypes>
    <static inline functions>

category/f_sample.v.h
    #include "f_sample.p.h"
    <private typedefs>
    #include "../foo/f_bar.v.h"
    <private typedef implementations>
    <private api prototypes>
    <static inline functions>

category/f_sample.c
    #include "f_sample.v.h"
    #include <faur.v.h>
    #include <system headers>
    <private types>
    <implementations>
"""

g_tool = Tool('Folder Name')

def main():
    folder = g_tool.args.get('Folder')
    pack_folder = folder.strip('./').lower().replace(' ', '_')
    pack_name = g_tool.args.get('Name').lower().replace(' ', '_')

    if len(pack_folder) < 1:
        g_tool.out.error(f'Invalid path {folder}')

    pack_path = f'{g_tool.files.dir_src}/{pack_folder}'

    if not os.path.exists(pack_path):
        os.makedirs(pack_path)
    elif not os.path.isdir(pack_path):
        g_tool.out.error(f'{pack_path} is not a dir')

    pack_c = f'{pack_path}/f_{pack_name}.c'
    pack_ph = f'{pack_path}/f_{pack_name}.p.h'
    pack_vh = f'{pack_path}/f_{pack_name}.v.h'

    g_tool.files.assert_not_exist(pack_c, pack_ph, pack_vh)

    author = '<your username>'

    for key in ['USER', 'USERNAME', 'LOGNAME']:
        if key in os.environ:
            author = os.environ[key]
            break

    header_guard = 'F_INC_{}_{}'.format(
        g_tool.sanitize_c_var(pack_folder).upper(),
        g_tool.sanitize_c_var(pack_name).upper())

    header_guard_p = header_guard + '_P_H'
    header_guard_v = header_guard + '_V_H'

    license_header = f"""\
/*
    Copyright {time.strftime('%Y')} {author}
    This file is part of Faur, a C video game framework.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License version 3,
    as published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/\
"""

    root_prefix = '../' * (1 + pack_folder.count('/'))

    g_tool.files.write_text(pack_c,
f"""\
{license_header}

#include "f_{pack_name}.v.h"
#include <faur.v.h>

static void f_{pack_name}__init(void)
{{
    //
}}

static void f_{pack_name}__uninit(void)
{{
    //
}}

const FPack f_pack__{pack_name} = {{
    "{pack_name}",
    f_{pack_name}__init,
    f_{pack_name}__uninit
}};
""")

    g_tool.files.write_text(pack_ph,
f"""\
{license_header}

#ifndef {header_guard_p}
#define {header_guard_p}

#include "{root_prefix}general/f_system_includes.h"

#endif // {header_guard_p}
""")

    g_tool.files.write_text(pack_vh,
f"""\
{license_header}

#ifndef {header_guard_v}
#define {header_guard_v}

#include "f_{pack_name}.p.h"

#include "{root_prefix}general/f_init.v.h"

extern const FPack f_pack__{pack_name};

#endif // {header_guard_v}
""")

if __name__ == '__main__':
    main()
