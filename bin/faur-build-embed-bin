#!/usr/bin/env python3

"""
    Copyright 2024 Alex Margarit <alex@alxm.org>
    This file is part of Faur, a C video game framework.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License version 3,
    as published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

from faur.tool.tool import FTool

g_tool = FTool('bin-file gen-file var-suffix')

def main():
    bin_file = g_tool.args.get('bin-file')
    target_file = g_tool.args.get('gen-file')
    var_name = g_tool.sanitize_c_var(g_tool.args.get('var-suffix'))
    bin_bytes = g_tool.files.read_bytes(bin_file)

    if target_file.endswith('.h'):
        content = process_h(var_name, bin_bytes)
    elif target_file.endswith('.c'):
        content = process_c(var_name, bin_bytes)
    else:
        g_tool.usage('Gen file must be a .c or .h file')

    g_tool.files.write_text(target_file, content)

def process_h(VarName, BinBytes):
    return f"""\
//
// Generated by:
// {g_tool.get_cmd()}
//

extern const uint8_t f_{VarName}[{len(BinBytes)}];
"""

def process_c(VarName, BinBytes):
    def format_bytes(Bytes):
        return ','.join(['0x{:0>2x}'.format(b) for b in Bytes])

    return f"""\
//
// Generated by:
// {g_tool.get_cmd()}
//
#include <faur.v.h>

const uint8_t f_{VarName}[{len(BinBytes)}] = {{
    {format_bytes(BinBytes)}
}};
"""

if __name__ == '__main__':
    main()
